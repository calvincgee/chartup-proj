{"version":3,"sources":["App.js","index.js"],"names":["App","chart","useState","type","setType","count","setCount","method","setMethod","units","setUnits","show","setShow","finalPrice","setFinalPrice","className","name","onChange","e","target","value","required","onClick","VehicleCount","VehicleType","PricingMethod","Units","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4KAiHeA,MA/Gf,WACE,IAAIC,EAAQ,CACV,QAAW,CACT,MAAS,IACT,OAAU,IACV,SAAY,KAEd,WAAY,CACV,MAAS,IACT,OAAU,IACV,SAAY,MAEd,SAAY,CACV,MAAS,IACT,OAAU,IACV,SAAY,GAEd,YAAa,CACX,MAAS,IACT,OAAU,IACV,SAAY,MAEd,MAAS,CACP,MAAS,IACT,OAAU,IACV,SAAY,KAEd,IAAO,CACL,MAAS,IACT,OAAU,IACV,SAAY,MAEd,UAAa,CACX,MAAS,IACT,OAAU,IACV,SAAY,GAEd,QAAW,CACT,MAAS,IACT,OAAU,IACV,SAAY,OAxCH,EA4CWC,mBAAS,WA5CpB,mBA4CNC,EA5CM,KA4CAC,EA5CA,OA6CaF,mBAAS,GA7CtB,mBA6CNG,EA7CM,KA6CCC,EA7CD,OA8CeJ,mBAAS,SA9CxB,mBA8CNK,EA9CM,KA8CEC,EA9CF,OA+CaN,qBA/Cb,mBA+CNO,EA/CM,KA+CCC,EA/CD,OAgDWR,oBAAS,GAhDpB,mBAgDNS,EAhDM,KAgDAC,EAhDA,OAiDuBV,mBAAS,GAjDhC,mBAiDNW,EAjDM,KAiDMC,EAjDN,KAuEb,OACE,sBAAKC,UAAU,MAAf,UACE,uDACE,0EACA,yBAAQC,KAAO,OAAOC,SAxB5B,SAAqBC,GACnBd,EAAQc,EAAEC,OAAOC,QAuBb,UACE,wBAAQA,MAAQ,UAAhB,qBACA,wBAAQA,MAAQ,WAAhB,sBACA,wBAAQA,MAAQ,WAAhB,sBACA,wBAAQA,MAAQ,YAAhB,uBACA,wBAAQA,MAAQ,QAAhB,mBACA,wBAAQA,MAAQ,MAAhB,iBACA,wBAAQA,MAAQ,YAAhB,uBACA,wBAAQA,MAAQ,UAAhB,wBAEF,uBACA,uDACA,uBAAOjB,KAAO,OAAOa,KAAO,QAAQC,SAhC1C,SAAsBC,GACpBZ,EAASY,EAAEC,OAAOC,QA+B+CC,UAAQ,IACrE,uBACA,gEACA,yBAAQL,KAAO,SAASC,SA/B9B,SAAuBC,GACrBV,EAAUU,EAAEC,OAAOC,QA8Bf,UACE,wBAAQA,MAAQ,QAAhB,mBACA,wBAAQA,MAAQ,SAAhB,oBACA,wBAAQA,MAAQ,WAAhB,yBAEF,uBACA,sFAAmE,SAAVb,EAAoB,OAAS,GAAc,UAAVA,EAAqB,QAAU,GAAc,YAAVA,EAAuB,QAAU,MAC9J,uBAAOJ,KAAO,OAAOa,KAAO,QAAQC,SAlC1C,SAAsBC,GACpBR,EAASQ,EAAEC,OAAOC,QAiC+CC,UAAQ,IACrE,uBACA,wBAAQC,QAAW,kBAhCNC,EAgCsBlB,EAhCRmB,EAgCerB,EAhCFsB,EAgCQlB,EAhCOmB,EAgCCjB,EA/B5DG,GAAQ,QACRE,EAAcb,EAAMuB,GAAaC,GAAiBF,EAAeG,GAFnE,IAAmBH,EAAcC,EAAaC,EAAeC,GAgCvD,2BAEEf,EACE,8BACA,wDAA2BE,OAE3B,iCCvGZc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.91366611.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction App() {\n  let chart = {\n    \"Charter\": {\n      \"Daily\": 1000,\n      \"Hourly\": 400,\n      \"Distance\": 3.5\n    },\n    \"Mini Bus\": {\n      \"Daily\": 925,\n      \"Hourly\": 360,\n      \"Distance\": 3.25\n    },\n    \"Sprinter\": {\n      \"Daily\": 850,\n      \"Hourly\": 320,\n      \"Distance\": 3\n    },\n    \"Party Bus\": {\n      \"Daily\": 775,\n      \"Hourly\": 280,\n      \"Distance\": 2.75\n    },\n    \"Sedan\": {\n      \"Daily\": 700,\n      \"Hourly\": 240,\n      \"Distance\": 2.5\n    }, \n    \"SUV\": {\n      \"Daily\": 625,\n      \"Hourly\": 200,\n      \"Distance\": 2.25\n    },\n    \"Limousine\": {\n      \"Daily\": 550,\n      \"Hourly\": 160,\n      \"Distance\": 2\n    },\n    \"Trolley\": {\n      \"Daily\": 475,\n      \"Hourly\": 120,\n      \"Distance\": 1.75\n    }\n  }\n\n  const [type, setType] = useState(\"Charter\");\n  const [count, setCount] = useState(0);\n  const [method, setMethod] = useState(\"Daily\");\n  const [units, setUnits] = useState();\n  const [show, setShow] = useState(false);\n  const [finalPrice, setFinalPrice] = useState(0);\n\n  function changeType (e) {\n    setType(e.target.value);\n  }\n\n  function changeCount (e) {\n    setCount(e.target.value);\n  }\n\n  function changeMethod (e) {\n    setMethod(e.target.value);\n  }\n\n  function changeUnits (e) {\n    setUnits(e.target.value);\n  }\n  \n  function calculate(VehicleCount, VehicleType, PricingMethod, Units) {\n    setShow(true);\n    setFinalPrice(chart[VehicleType][PricingMethod] * VehicleCount * Units);\n  }\n  return (\n    <div className=\"App\">\n      <h2>Auto Price Calculator</h2>\n        <label>Select what type of vehicle you want:</label>\n        <select name = \"type\" onChange = {changeType}>\n          <option value = \"Charter\">Charter</option>\n          <option value = \"Mini Bus\">Mini Bus</option>\n          <option value = \"Sprinter\">Sprinter</option>\n          <option value = \"Party Bus\">Party Bus</option>\n          <option value = \"Sedan\">Sedan</option>\n          <option value = \"SUV\">SUV</option>\n          <option value = \"Limousine\">Limousine</option>\n          <option value = \"Trolley\">Trolley</option>\n        </select>\n        <br/>\n        <label>How many vehicles?</label>\n        <input type = \"text\" name = \"count\" onChange = {changeCount} required></input>\n        <br/>\n        <label>Select your pricing method:</label>\n        <select name = \"method\" onChange = {changeMethod}>\n          <option value = \"Daily\">Daily</option>\n          <option value = \"Hourly\">Hourly</option>\n          <option value = \"Distance\">Distance</option>\n        </select>\n        <br/>\n        <label>Please enter how long you will be renting for in {method == \"Daily\" ? \"days\" : \"\"}{method == \"Hourly\" ? \"hours\" : \"\"}{method == \"Distance\" ? \"miles\" : \"\"}</label>\n        <input type = \"text\" name = \"units\" onChange = {changeUnits} required></input>\n        <br/>\n        <button onClick = {() => calculate(count, type, method, units)}>Get my price!</button>\n        {\n          show\n          ? <div>\n            <h3>Your final price is: ${finalPrice}</h3>\n          </div>\n          : <></>\n        }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}